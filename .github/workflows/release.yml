name: release

on:
  release:
    types: [created]

jobs:
  build:
    strategy:
      matrix:
        platform: [ ubuntu-latest ]
        node-version: [ 12.x ]
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: npm ci

      - name: npm build
        run: npm run build
        env:
          MNENOMIC: ${{secrets.MNENOMIC}}
          INFURA_API_KEY: ${{secrets.INFURA_API_KEY}}

      - name: npm deploy
        run: npm run deploy -- --network ropsten --reset
        env:
          MNENOMIC: ${{secrets.MNENOMIC}}
          INFURA_API_KEY: ${{secrets.INFURA_API_KEY}}

#      - name: npm config-gen
#        run: npm run config-gen -- --network ropsten
#        env:
#          MNENOMIC: ${{secrets.MNENOMIC}}
#          INFURA_API_KEY: ${{secrets.INFURA_API_KEY}}

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: networks-${{ github.head_ref }}-${{ github.sha }}
          path: |
            networks
            artifacts
            deployments

  publish-master:
    needs: build

    strategy:
      matrix:
        platform: [ubuntu-latest]
        node-version: [12.x]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Clone master branch
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@https://users.noreply.github.com/"
          git clone "https://${{ secrets.ACCESS_TOKEN }}@github.com/$GITHUB_REPOSITORY.git" --branch master --single-branch ./output

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: networks-${{ github.head_ref }}-${{ github.sha }}
          path: ./output/networks

      - name: Publish master branch
        run: |
          COMMIT_MESSAGE="new build ${{ github.event.release.tag_name }} on $(date +'%Y-%m-%d %H:%M:%S')"
          git add --all
          git diff-index --quiet --cached HEAD -- && echo "No changes!" && exit 0 || echo $COMMIT_MESSAGE
          git commit -m "${COMMIT_MESSAGE}"
          git push https://${{ secrets.ACCESS_TOKEN }}@github.com/$GITHUB_REPOSITORY.git master
        working-directory: ./output

#  publish-networks:
#    needs: build
#
#    strategy:
#      matrix:
#        platform: [ubuntu-latest]
#        node-version: [12.x]
#    runs-on: ${{ matrix.platform }}
#
#    steps:
#      - name: Clone master branch
#        run: |
#          git config --global user.name "${GITHUB_ACTOR}"
#          git config --global user.email "${GITHUB_ACTOR}@https://users.noreply.github.com/"
#          git clone "https://${{ secrets.ACCESS_TOKEN }}@github.com/bondappetit/networks.git" --branch master --single-branch ./output
#
#      - name: Download artifacts
#        uses: actions/download-artifact@v2
#        with:
#          name: networks-${{ github.head_ref }}-${{ github.sha }}
#          path: ./output
#
#      - name: Publish master branch
#        run: |
#          COMMIT_MESSAGE="new build ${{ github.event.release.tag_name }} on $(date +'%Y-%m-%d %H:%M:%S')"
#          git add --all
#          git diff-index --quiet --cached HEAD -- && echo "No changes!" && exit 0 || echo $COMMIT_MESSAGE
#          git commit -m "${COMMIT_MESSAGE}"
#          git push https://${{ secrets.ACCESS_TOKEN }}@github.com/bondappetit/networks.git master
#        working-directory: ./output
#
#  publish-npm:
#    needs: build
#
#    strategy:
#      matrix:
#        platform: [ubuntu-latest]
#        node-version: [12.x]
#    runs-on: ${{ matrix.platform }}
#
#    steps:
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v1
#        with:
#          node-version: ${{ matrix.node-version }}
#          registry-url: https://registry.npmjs.com/
#
#      - name: Clone networks
#        run: |
#          git config --global user.name "${GITHUB_ACTOR}"
#          git config --global user.email "${GITHUB_ACTOR}@https://users.noreply.github.com/"
#          git clone "https://${{ secrets.ACCESS_TOKEN }}@github.com/bondappetit/networks.git" --branch master --single-branch ./output
#
#      - name: Download artifacts
#        uses: actions/download-artifact@v2
#        with:
#          name: networks-${{ github.head_ref }}-${{ github.sha }}
#          path: ./output
#
#      - name: Publish to npm
#        run: |
#          npm version ${{ github.event.release.tag_name }} --no-git-tag-version
#          npm publish --access public
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#        working-directory: ./output

